(function(){"use strict";function m(t,e){let n;for(const r of t)if(r.name===e[0]&&r.type==="folder"){n=r;break}for(let r=1;r<e.length&&(n!=null&&n.children);r++){const s=n.children.find(a=>a.name===e[r]&&a.type==="folder");if(!s)return null;n=s}return n||null}function T(t,e){const n=m(t,["Kiosk Documents","Default"]),r=(n==null?void 0:n.children)||[],s=e.reduce((c,i)=>{const d=m(t,["Kiosk Documents",i]);return d!=null&&d.children&&c.push(...d.children),c},[]),a=[...r,...s],o=Array.from(new Map(a.map(c=>[c.name,c])).values());return x(o)}function j(t){var r;const e=m(t,["Idle Screen","Default"]);return((r=e==null?void 0:e.children)==null?void 0:r.filter(s=>s.type==="file"&&s.mimeType.startsWith("image/")))||[]}function k(t,e){const n=T(t,e),r=j(t),s=[...n,...r],a=s.filter(o=>o.hasThumbnail).map(o=>({...o,id:`thumb_${o.id}`,name:`thumbnail_${o.name}`}));return[...s,...a]}function F(t){const e=t.match(/^(\d+)\s*-\s*/);return e?parseInt(e[1],10):Number.MAX_SAFE_INTEGER}function x(t){return[...t].sort((e,n)=>{const r=F(e.name),s=F(n.name);return r===s?e.name.localeCompare(n.name):r-s})}const h=(t,e)=>e.some(n=>t instanceof n);let B,C;function O(){return B||(B=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function N(){return C||(C=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const w=new WeakMap,y=new WeakMap,f=new WeakMap;function V(t){const e=new Promise((n,r)=>{const s=()=>{t.removeEventListener("success",a),t.removeEventListener("error",o)},a=()=>{n(l(t.result)),s()},o=()=>{r(t.error),s()};t.addEventListener("success",a),t.addEventListener("error",o)});return f.set(e,t),e}function U(t){if(w.has(t))return;const e=new Promise((n,r)=>{const s=()=>{t.removeEventListener("complete",a),t.removeEventListener("error",o),t.removeEventListener("abort",o)},a=()=>{n(),s()},o=()=>{r(t.error||new DOMException("AbortError","AbortError")),s()};t.addEventListener("complete",a),t.addEventListener("error",o),t.addEventListener("abort",o)});w.set(t,e)}let g={get(t,e,n){if(t instanceof IDBTransaction){if(e==="done")return w.get(t);if(e==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return l(t[e])},set(t,e,n){return t[e]=n,!0},has(t,e){return t instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in t}};function M(t){g=t(g)}function W(t){return N().includes(t)?function(...e){return t.apply(b(this),e),l(this.request)}:function(...e){return l(t.apply(b(this),e))}}function _(t){return typeof t=="function"?W(t):(t instanceof IDBTransaction&&U(t),h(t,O())?new Proxy(t,g):t)}function l(t){if(t instanceof IDBRequest)return V(t);if(y.has(t))return y.get(t);const e=_(t);return e!==t&&(y.set(t,e),f.set(e,t)),e}const b=t=>f.get(t);function $(t,e,{blocked:n,upgrade:r,blocking:s,terminated:a}={}){const o=indexedDB.open(t,e),c=l(o);return r&&o.addEventListener("upgradeneeded",i=>{r(l(o.result),i.oldVersion,i.newVersion,l(o.transaction),i)}),n&&o.addEventListener("blocked",i=>n(i.oldVersion,i.newVersion,i)),c.then(i=>{a&&i.addEventListener("close",()=>a()),s&&i.addEventListener("versionchange",d=>s(d.oldVersion,d.newVersion,d))}).catch(()=>{}),c}const H=["get","getKey","getAll","getAllKeys","count"],K=["put","add","delete","clear"],p=new Map;function v(t,e){if(!(t instanceof IDBDatabase&&!(e in t)&&typeof e=="string"))return;if(p.get(e))return p.get(e);const n=e.replace(/FromIndex$/,""),r=e!==n,s=K.includes(n);if(!(n in(r?IDBIndex:IDBObjectStore).prototype)||!(s||H.includes(n)))return;const a=async function(o,...c){const i=this.transaction(o,s?"readwrite":"readonly");let d=i.store;return r&&(d=d.index(c.shift())),(await Promise.all([d[n](...c),s&&i.done]))[0]};return p.set(e,a),a}M(t=>({...t,get:(e,n,r)=>v(e,n)||t.get(e,n,r),has:(e,n)=>!!v(e,n)||t.has(e,n)}));const R=["continue","continuePrimaryKey","advance"],P={},D=new WeakMap,S=new WeakMap,z={get(t,e){if(!R.includes(e))return t[e];let n=P[e];return n||(n=P[e]=function(...r){D.set(this,S.get(this)[e](...r))}),n}};async function*G(...t){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...t)),!e)return;e=e;const n=new Proxy(e,z);for(S.set(n,e),f.set(n,b(e));e;)yield n,e=await(D.get(n)||e.continue()),D.delete(n)}function L(t,e){return e===Symbol.asyncIterator&&h(t,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&h(t,[IDBIndex,IDBObjectStore])}M(t=>({...t,get(e,n,r){return L(e,n)?G:t.get(e,n,r)},has(e,n){return L(e,n)||t.has(e,n)}}));const u={dbName:"document-viewer-cache",stores:{files:"files",metadata:"metadata"},version:2},A={baseUrl:"https://kdv-gdriveproxy.onrender.com/api"};class X{constructor(e){this.db=e}async getFile(e){try{const n=await this.db.get(u.stores.files,e);return n?URL.createObjectURL(n.blob):null}catch(n){return console.error("Error getting cached file:",n),null}}async getMetadata(e){try{return await this.db.get(u.stores.metadata,e)||null}catch(n){return console.error("Error getting file metadata:",n),null}}async needsUpdate(e){try{const n=await this.getMetadata(e.id);return!n||n.versionHash!==e.versionHash}catch(n){return console.error("Error checking file update:",n),!0}}async downloadAndCache(e){const n=performance.now();try{const r=e.hasThumbnail&&e.id.startsWith("thumb_")?`${A.baseUrl}/files/${e.id.replace("thumb_","")}/thumbnail`:`${A.baseUrl}/files/${e.id}/preview`,s=await fetch(r);if(!s.ok)throw new Error(`Failed to download ${e.name}`);const a=await s.blob(),o=performance.now(),c=a.size/((o-n)/1e3),i=this.db.transaction([u.stores.files,u.stores.metadata],"readwrite"),d={blob:a,versionHash:e.versionHash,timestamp:Date.now()},Z={versionHash:e.versionHash,timestamp:Date.now()};return await Promise.all([i.objectStore(u.stores.files).put(d,e.id),i.objectStore(u.stores.metadata).put(Z,e.id)]),await i.done,{blob:a,speed:c}}catch(r){throw console.error("Error downloading file:",r),r}}}let I=null;async function E(){if(!I){const t=await $(u.dbName,u.version,{upgrade(e,n){e.objectStoreNames.contains(u.stores.files)||e.createObjectStore(u.stores.files),e.objectStoreNames.contains(u.stores.metadata)||e.createObjectStore(u.stores.metadata)}});I=new X(t)}return I}async function J(t){return(await E()).needsUpdate(t)}async function Q(t){return(await E()).downloadAndCache(t)}async function Y(){await E()}Y(),self.onmessage=async t=>{const{files:e,tags:n}=t.data,r=k(e,n);let s=r.length,a=0,o=0;for(const c of r)try{if(await J(c)){const{speed:d}=await Q(c);o+=d}a++,s--,self.postMessage({type:"progress",fileName:c.name,remaining:s,speed:o/a,progress:a/r.length*100})}catch(i){console.error("Error processing file:",i),self.postMessage({type:"error",message:i instanceof Error?i.message:"Failed to cache file"})}self.postMessage({type:"complete"})}})();
